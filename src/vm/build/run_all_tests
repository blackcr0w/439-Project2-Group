FAILS=0
TESTS=0
REDIRECT=0;

if [ -t 1 ] ; then
  echo -n ''
else
  REDIRECT=1;
fi

pass_fail()
{
 	NUM=$(grep -c "PASS" "$1")
	if [[ $NUM > 0 ]]; then
		echo -e '\e[0;32mPASSED!\e[0m'
	else
	{
		echo -e '\e[0;31mFAILED!!!\e[0m'
		FAILS=`expr $FAILS + 1`
	}
	fi
}

run_test()
{
	TESTS=`expr $TESTS + 1`
	echo -n $TESTS. $1 ': '
	echo '-------------------------------------------' >> all_tests_output.txt
	echo $2 '' >> all_tests_output.txt
	echo '' >> all_tests_output.txt
	
	if [[ $REDIRECT > 0 ]]; then
		echo -ne '\tRunning test:' $TESTS '\r' >&2
	fi
	
	make $3 >> all_tests_output.txt 
	pass_fail $3
	echo '-------------------------------------------'
}

echo -n > all_tests_output.txt

echo '*******************************************'
echo 'PROJECT 2: FUNCTIONALITY'
echo '*******************************************'
echo ''
echo '-------------------------------------------'

run_test Args-none ARGS-NONE tests/userprog/args-none.result
run_test Args-single ARGS-SINGLE tests/userprog/args-single.result
run_test Args-multiple ARGS-MULTIPLE tests/userprog/args-multiple.result

echo ''
echo '*******************************************'
echo 'PROJECT 2: ROBUSTNESS'
echo '*******************************************'
echo ''
echo '-------------------------------------------'

run_test Close-stdin CLOSE-STDIN tests/userprog/close-stdin.result
run_test Close-stdout CLOSE-STDOUT tests/userprog/close-stdout.result

echo ''
echo '*******************************************'
echo 'PROJECT 3: VM'
echo '*******************************************'
echo ''
echo '-------------------------------------------'

run_test pt-grow-stack PT-GROW-STACK tests/vm/pt-grow-stack.result
run_test pt-grow-pusha PT-GROW-PUSHA tests/vm/pt-grow-pusha.result
run_test pt-grow-bad PT-GROW-BAD tests/vm/pt-grow-bad.result
run_test pt-big-stk-obj PT-BIG-STK-OBJ tests/vm/pt-big-stk-obj.result
run_test pt-bad-addr PT-BAD-ADDR tests/vm/pt-bad-addr.result
run_test pt-bad-read PT-BAD-READ tests/vm/pt-bad-read.result
run_test pt-write-code PT-WRITE-CODE tests/vm/pt-write-code.result
run_test pt-write-code2 PT-WRITE-CODE2 tests/vm/pt-write-code2.result
run_test pt-grow-stk-sc PT-GROW-STK-SC tests/vm/pt-grow-stk-sc.result
run_test page-linear PAGE-LINEAR tests/vm/page-linear.result
run_test page-parallel PAGE-PARALLEL tests/vm/page-parallel.result
run_test page-merge-seq PAGE-MERGE-SEQ tests/vm/page-merge-seq.result
run_test page-merge-par PAGE-MERGE-PAR tests/vm/page-merge-par.result
run_test page-merge-stk PAGE-MERGE-STK tests/vm/page-merge-stk.result
run_test page-shuffle PAGE-SHUFFLE tests/vm/page-shuffle.result

echo ''
echo 'FAILED:' $FAILS 'out of' $TESTS
echo ''
echo 'DONE'
echo ''
echo 'NOTE: terminal output for tests saved in all_tests_output.txt'
echo ''
